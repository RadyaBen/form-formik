{"version":3,"sources":["components/MyTextInput/MyTextInput.js","components/MyCheckbox/MyCheckbox.js","components/Form/Form.js","components/App/App.js","index.js"],"names":["MyTextInput","label","props","useField","field","meta","htmlFor","name","touched","error","className","MyCheckbox","children","type","CustomForm","initialValues","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","id","autoComplete","component","as","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEMA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC5C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACC,qCACC,uBAAOC,QAASJ,EAAMK,KAAtB,SAA6BN,IAC7B,iDAAWG,GAAWF,IACrBG,EAAKG,SAAWH,EAAKI,MACrB,qBAAKC,UAAU,QAAf,SAAwBL,EAAKI,QAC1B,OAGN,E,eCXKE,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaV,EAAY,iBAC3C,EAAsBC,YAAS,2BAAKD,GAAN,IAAaW,KAAM,cAAjD,mBAAOT,EAAP,KAAcC,EAAd,KACA,OACI,qCACI,wBAAOK,UAAU,WAAjB,UACI,+CAAOG,KAAK,YAAeT,GAAWF,IACrCU,KAEJP,EAAKG,SAAWH,EAAKI,MAClB,qBAAKC,UAAU,QAAf,SAAwBL,EAAKI,QAC7B,OAGf,ECTKK,EAAa,WACf,OACI,cAAC,IAAD,CACIC,cAAe,CACXR,KAAM,GACNS,MAAO,GACPC,OAAQ,EACRC,SAAU,GACVC,KAAM,GACNC,OAAO,GAEXC,iBAAkBC,IAAW,CACzBf,KAAMe,MACDC,IAAI,EAAG,wBACPC,SAAS,6BACdR,MAAOM,MACFN,MAAM,0BACNQ,SAAS,6BACdP,OAAQK,MACHC,IAAI,EAAG,cACPC,SAAS,6BACdN,SAAUI,MAAaE,SAAS,mBAChCL,KAAMG,MACDC,IAAI,GAAI,0BACbH,MAAOE,MACFE,SAAS,oBACTC,MAAM,EAAC,GAAO,sBAEvBC,SAAU,SAAAC,GAAM,OAAIC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAQ,KAAM,GAA7C,EA1BpB,SA4BI,eAAC,IAAD,CAAMjB,UAAU,OAAhB,UACI,6CACA,cAAC,EAAD,CACIT,MAAM,YACN+B,GAAG,OACHzB,KAAK,OACLM,KAAK,OACLoB,aAAa,QAEjB,cAAC,EAAD,CACIhC,MAAM,aACN+B,GAAG,OACHzB,KAAK,QACLM,KAAK,OACLoB,aAAa,QAEjB,uBAAO3B,QAAQ,SAAf,oBACA,cAAC,IAAD,CACI0B,GAAG,SACHzB,KAAK,SACLM,KAAK,WAET,cAAC,IAAD,CAAcH,UAAU,QAAQH,KAAK,SAAS2B,UAAU,QACxD,uBAAO5B,QAAQ,WAAf,sBACA,eAAC,IAAD,CACI0B,GAAG,WACHzB,KAAK,WACL4B,GAAG,SAHP,UAII,wBAAQC,MAAM,GAAd,6BACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEJ,cAAC,IAAD,CAAc1B,UAAU,QAAQH,KAAK,WAAW2B,UAAU,QAC1D,uBAAO5B,QAAQ,OAAf,0BACA,cAAC,IAAD,CACI0B,GAAG,OACHzB,KAAK,OACL4B,GAAG,aAEP,cAAC,IAAD,CAAczB,UAAU,QAAQH,KAAK,OAAO2B,UAAU,QACtD,cAAC,EAAD,CACI3B,KAAK,QADT,mDAIA,wBAAQM,KAAK,SAAb,sBAIf,ECjFKwB,G,OAAM,WACR,OACI,qBAAK3B,UAAU,MAAf,SACI,cAAC,EAAD,KAGX,GCLD4B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,Q","file":"static/js/main.97d88087.chunk.js","sourcesContent":["import { useField } from 'formik';\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n\tconst [field, meta] = useField(props);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label htmlFor={props.name}>{label}</label>\r\n\t\t\t<input {...field} {...props} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<div className='error'>{meta.error}</div>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport { MyTextInput };","import { useField } from 'formik';\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n    return (\r\n        <>\r\n            <label className='checkbox'>\r\n                <input type='checkbox' {...field} {...props} />\r\n                {children}\r\n            </label>\r\n            {meta.touched && meta.error ? (\r\n                <div className='error'>{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport { MyCheckbox };","import { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { MyTextInput } from '../MyTextInput';\r\nimport { MyCheckbox } from '../MyCheckbox';\r\n\r\nconst CustomForm = () => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: '',\r\n                email: '',\r\n                amount: 0,\r\n                currency: '',\r\n                text: '',\r\n                terms: false,\r\n            }}\r\n            validationSchema={Yup.object({\r\n                name: Yup.string()\r\n                    .min(2, 'Minimum 2 characters')\r\n                    .required('This is a required field!'),\r\n                email: Yup.string()\r\n                    .email('Incorrect email adress')\r\n                    .required('This is a required field!'),\r\n                amount: Yup.number()\r\n                    .min(5, 'At least 5')\r\n                    .required('This is a required field!'),\r\n                currency: Yup.string().required('Choose currency'),\r\n                text: Yup.string()\r\n                    .min(10, 'At least 10 characters'),\r\n                terms: Yup.boolean()\r\n                    .required('Consent required')\r\n                    .oneOf([true], 'Consent required'),\r\n            })}\r\n            onSubmit={values => console.log(JSON.stringify(values, null, 2))}\r\n        >\r\n            <Form className='form' >\r\n                <h2>Send donate</h2>\r\n                <MyTextInput\r\n                    label='Your name'\r\n                    id='name'\r\n                    name='name'\r\n                    type='text'\r\n                    autoComplete='off'\r\n                />\r\n                <MyTextInput\r\n                    label='Your email'\r\n                    id='name'\r\n                    name='email'\r\n                    type='text'\r\n                    autoComplete='off'\r\n                />\r\n                <label htmlFor='amount'>Amount</label>\r\n                <Field\r\n                    id='amount'\r\n                    name='amount'\r\n                    type='number'\r\n                />\r\n                <ErrorMessage className='error' name='amount' component='div' />\r\n                <label htmlFor='currency'>Currency</label>\r\n                <Field\r\n                    id='currency'\r\n                    name='currency'\r\n                    as='select' >\r\n                    <option value=''>Choose currency</option>\r\n                    <option value='USD'>USD</option>\r\n                    <option value='UAH'>UAH</option>\r\n                    <option value='RUB'>RUB</option>\r\n                </Field>\r\n                <ErrorMessage className='error' name='currency' component='div' />\r\n                <label htmlFor='text'>Your message</label>\r\n                <Field\r\n                    id='text'\r\n                    name='text'\r\n                    as='textarea'\r\n                />\r\n                <ErrorMessage className='error' name='text' component='div' />\r\n                <MyCheckbox\r\n                    name='terms'>\r\n\t\t\t\t\tDo you agree with the privacy policy?\r\n                </MyCheckbox>\r\n                <button type='submit'>Send</button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport { CustomForm };","import { CustomForm } from '../Form';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app'>\r\n            <CustomForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { App };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}